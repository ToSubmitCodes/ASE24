keras.layers.Bidirectional( self, layer, merge_mode='concat', weights=None, backward_layer=None, **kwargs )
keras.layers.ConvLSTM1D( self, filters, kernel_size, strides=1, padding='valid', data_format=None, dilation_rate=1, activation='tanh', recurrent_activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', unit_forget_bias=True, kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, seed=None, return_sequences=False, return_state=False, go_backwards=False, stateful=False, **kwargs )
keras.layers.ConvLSTM2D( self, filters, kernel_size, strides=1, padding='valid', data_format=None, dilation_rate=1, activation='tanh', recurrent_activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', unit_forget_bias=True, kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, seed=None, return_sequences=False, return_state=False, go_backwards=False, stateful=False, **kwargs )
keras.layers.ConvLSTM3D( self, filters, kernel_size, strides=1, padding='valid', data_format=None, dilation_rate=1, activation='tanh', recurrent_activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', unit_forget_bias=True, kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, seed=None, return_sequences=False, return_state=False, go_backwards=False, stateful=False, **kwargs )
keras.layers.GRUCell( self, units, activation='tanh', recurrent_activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, reset_after=True, seed=None, **kwargs )
keras.layers.GRU( self, units, activation='tanh', recurrent_activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, seed=None, return_sequences=False, return_state=False, go_backwards=False, stateful=False, unroll=False, reset_after=True, **kwargs )
keras.layers.LSTM( self, units, activation='tanh', recurrent_activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', unit_forget_bias=True, kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, seed=None, return_sequences=False, return_state=False, go_backwards=False, stateful=False, unroll=False, **kwargs )
keras.layers.SimpleRNN( self, units, activation='tanh', use_bias=True, kernel_initializer='glorot_uniform', recurrent_initializer='orthogonal', bias_initializer='zeros', kernel_regularizer=None, recurrent_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, recurrent_constraint=None, bias_constraint=None, dropout=0.0, recurrent_dropout=0.0, return_sequences=False, return_state=False, go_backwards=False, stateful=False, unroll=False, seed=None, **kwargs )
keras.layers.TimeDistributed( self, layer, **kwargs )
keras.layers.Cropping1D( self, cropping=(1, 1), **kwargs )
keras.layers.Cropping2D( self, cropping=((0, 0), (0, 0)), data_format=None, **kwargs )
keras.layers.Cropping3D( self, cropping=((1, 1), (1, 1), (1, 1)), data_format=None, **kwargs )
keras.layers.Flatten( self, data_format=None, **kwargs )
keras.layers.Permute( self, dims, **kwargs )
keras.layers.RepeatVector( self, n, **kwargs )
keras.layers.Reshape( self, target_shape, **kwargs )
keras.layers.UpSampling1D( self, size=2, **kwargs )
keras.layers.UpSampling2D( self, size=(2, 2), data_format=None, interpolation='nearest', **kwargs )
keras.layers.UpSampling3D( self, size=(2, 2, 2), data_format=None, **kwargs )
keras.layers.ZeroPadding1D( self, padding=1, **kwargs )
keras.layers.ZeroPadding2D( self, padding=(1, 1), data_format=None, **kwargs )
keras.layers.ZeroPadding3D( self, padding=((1, 1), (1, 1), (1, 1)), data_format=None, **kwargs )
keras.layers.ActivityRegularization( self, l1=0.0, l2=0.0, **kwargs )
keras.layers.AlphaDropout( self, rate, noise_shape=None, seed=None, **kwargs )
keras.layers.Dropout( self, rate, noise_shape=None, seed=None, **kwargs )
keras.layers.GaussianDropout( self, rate, seed=None, **kwargs )
keras.layers.GaussianNoise( self, stddev, seed=None, **kwargs )
keras.layers.SpatialDropout1D( self, rate, seed=None, name=None, dtype=None )
keras.layers.SpatialDropout2D( self, rate, data_format=None, seed=None, name=None, dtype=None )
keras.layers.SpatialDropout3D( self, rate, data_format=None, seed=None, name=None, dtype=None )
keras.layers.CategoryEncoding( self, num_tokens=None, output_mode='multi_hot', **kwargs )
keras.layers.CenterCrop( self, height, width, data_format=None, **kwargs )
keras.layers.Discretization( self, bin_boundaries=None, num_bins=None, epsilon=0.01, output_mode='int', sparse=False, dtype=None, name=None )
keras.layers.HashedCrossing( self, num_bins, output_mode='int', sparse=False, name=None, dtype=None, **kwargs )
keras.layers.Hashing( self, num_bins, mask_value=None, salt=None, output_mode='int', sparse=False, **kwargs )
keras.layers.IntegerLookup( self, max_tokens=None, num_oov_indices=1, mask_token=None, oov_token=-1, vocabulary=None, vocabulary_dtype='int64', idf_weights=None, invert=False, output_mode='int', sparse=False, pad_to_max_tokens=False, name=None, **kwargs )
keras.layers.Normalization( self, axis=-1, mean=None, variance=None, invert=False, **kwargs )
keras.layers.RandomBrightness( self, factor, value_range=(0, 255), seed=None, **kwargs )
keras.layers.RandomContrast( self, factor, seed=None, **kwargs )
keras.layers.RandomCrop( self, height, width, seed=None, data_format=None, name=None, **kwargs )
keras.layers.RandomFlip( self, mode='horizontal_and_vertical', seed=None, **kwargs )
keras.layers.RandomRotation( self, factor, fill_mode='reflect', interpolation='bilinear', seed=None, fill_value=0.0, value_range=(0, 255), data_format=None, **kwargs )
keras.layers.RandomTranslation( self, height_factor, width_factor, fill_mode='reflect', interpolation='bilinear', seed=None, fill_value=0.0, data_format=None, **kwargs )
keras.layers.RandomZoom( self, height_factor, width_factor=None, fill_mode='reflect', interpolation='bilinear', seed=None, fill_value=0.0, data_format=None, **kwargs )
keras.layers.Rescaling( self, scale, offset=0.0, **kwargs )
keras.layers.Resizing( self, height, width, interpolation='bilinear', crop_to_aspect_ratio=False, data_format=None, **kwargs )
keras.layers.StringLookup( self, max_tokens=None, num_oov_indices=1, mask_token=None, oov_token='[UNK]', vocabulary=None, idf_weights=None, invert=False, output_mode='int', pad_to_max_tokens=False, sparse=False, encoding='utf-8', name=None, **kwargs )
keras.layers.TextVectorization( self, max_tokens=None, standardize='lower_and_strip_punctuation', split='whitespace', ngrams=None, output_mode='int', output_sequence_length=None, pad_to_max_tokens=False, vocabulary=None, idf_weights=None, sparse=False, ragged=False, encoding='utf-8', name=None, **kwargs )
keras.layers.AveragePooling1D( self, pool_size, strides=None, padding='valid', data_format=None, name=None, **kwargs )
keras.layers.AveragePooling2D( self, pool_size, strides=None, padding='valid', data_format=None, name=None, **kwargs )
keras.layers.AveragePooling3D( self, pool_size, strides=None, padding='valid', data_format=None, name=None, **kwargs )
keras.layers.GlobalAveragePooling1D( self, data_format=None, keepdims=False, **kwargs )
keras.layers.GlobalAveragePooling2D( self, data_format=None, keepdims=False, **kwargs )
keras.layers.GlobalAveragePooling3D( self, data_format=None, keepdims=False, **kwargs )
keras.layers.GlobalMaxPooling1D( self, data_format=None, keepdims=False, **kwargs )
keras.layers.GlobalMaxPooling2D( self, data_format=None, keepdims=False, **kwargs )
keras.layers.GlobalMaxPooling3D( self, data_format=None, keepdims=False, **kwargs )
keras.layers.MaxPooling1D( self, pool_size=2, strides=None, padding='valid', data_format=None, name=None, **kwargs )
keras.layers.MaxPooling2D( self, pool_size=(2, 2), strides=None, padding='valid', data_format=None, name=None, **kwargs )
keras.layers.MaxPooling3D( self, pool_size=(2, 2, 2), strides=None, padding='valid', data_format=None, name=None, **kwargs )
keras.layers.BatchNormalization( self, axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, synchronized=False, **kwargs )
keras.layers.GroupNormalization( self, groups=32, axis=-1, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, **kwargs )
keras.layers.LayerNormalization( self, axis=-1, epsilon=0.001, center=True, scale=True, rms_scaling=False, beta_initializer='zeros', gamma_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, **kwargs )
keras.layers.SpectralNormalization( self, layer, power_iterations=1, **kwargs )
keras.layers.UnitNormalization( self, axis=-1, **kwargs )
keras.layers.Add( self, **kwargs )
keras.layers.Average( self, **kwargs )
keras.layers.Concatenate( self, axis=-1, **kwargs )
keras.layers.Dot( self, axes, normalize=False, **kwargs )
keras.layers.Maximum( self, **kwargs )
keras.layers.Minimum( self, **kwargs )
keras.layers.Multiply( self, **kwargs )
keras.layers.Subtract( self, **kwargs )
keras.layers.Dense( self, units, activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, lora_rank=None, **kwargs )
keras.layers.EinsumDense( self, equation, output_shape, activation=None, bias_axes=None, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, kernel_constraint=None, bias_constraint=None, lora_rank=None, **kwargs )
keras.layers.Embedding( self, input_dim, output_dim, embeddings_initializer='uniform', embeddings_regularizer=None, embeddings_constraint=None, mask_zero=False, lora_rank=None, **kwargs )
keras.layers.Identity( self, **kwargs )
keras.layers.Lambda( self, function, output_shape=None, mask=None, arguments=None, **kwargs )
keras.layers.Masking( self, mask_value=0.0, **kwargs )
keras.layers.Conv1D( self, filters, kernel_size, strides=1, padding='valid', data_format=None, dilation_rate=1, groups=1, activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.Conv1DTranspose( self, filters, kernel_size, strides=1, padding='valid', data_format=None, dilation_rate=1, activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.Conv2D( self, filters, kernel_size, strides=(1, 1), padding='valid', data_format=None, dilation_rate=(1, 1), groups=1, activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.Conv2DTranspose( self, filters, kernel_size, strides=(1, 1), padding='valid', data_format=None, dilation_rate=(1, 1), activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.Conv3D( self, filters, kernel_size, strides=(1, 1, 1), padding='valid', data_format=None, dilation_rate=(1, 1, 1), groups=1, activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.Conv3DTranspose( self, filters, kernel_size, strides=(1, 1, 1), padding='valid', data_format=None, dilation_rate=(1, 1, 1), activation=None, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.DepthwiseConv1D( self, kernel_size, strides=1, padding='valid', depth_multiplier=1, data_format=None, dilation_rate=1, activation=None, use_bias=True, depthwise_initializer='glorot_uniform', bias_initializer='zeros', depthwise_regularizer=None, bias_regularizer=None, activity_regularizer=None, depthwise_constraint=None, bias_constraint=None, **kwargs )
keras.layers.DepthwiseConv2D( self, kernel_size, strides=(1, 1), padding='valid', depth_multiplier=1, data_format=None, dilation_rate=(1, 1), activation=None, use_bias=True, depthwise_initializer='glorot_uniform', bias_initializer='zeros', depthwise_regularizer=None, bias_regularizer=None, activity_regularizer=None, depthwise_constraint=None, bias_constraint=None, **kwargs )
keras.layers.SeparableConv1D( self, filters, kernel_size, strides=1, padding='valid', data_format=None, dilation_rate=1, depth_multiplier=1, activation=None, use_bias=True, depthwise_initializer='glorot_uniform', pointwise_initializer='glorot_uniform', bias_initializer='zeros', depthwise_regularizer=None, pointwise_regularizer=None, bias_regularizer=None, activity_regularizer=None, depthwise_constraint=None, pointwise_constraint=None, bias_constraint=None, **kwargs )
keras.layers.SeparableConv2D( self, filters, kernel_size, strides=(1, 1), padding='valid', data_format=None, dilation_rate=(1, 1), depth_multiplier=1, activation=None, use_bias=True, depthwise_initializer='glorot_uniform', pointwise_initializer='glorot_uniform', bias_initializer='zeros', depthwise_regularizer=None, pointwise_regularizer=None, bias_regularizer=None, activity_regularizer=None, depthwise_constraint=None, pointwise_constraint=None, bias_constraint=None, **kwargs )
keras.layers.AdditiveAttention( self, use_scale=True, dropout=0.0, **kwargs )
keras.layers.Attention( self, use_scale=False, score_mode='dot', dropout=0.0, seed=None, **kwargs )
keras.layers.MultiHeadAttention( self, num_heads, key_dim, value_dim=None, dropout=0.0, use_bias=True, output_shape=None, attention_axes=None, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, **kwargs )
keras.layers.Activation( self, activation, **kwargs )
keras.layers.ELU( self, alpha=1.0, **kwargs )
keras.layers.LeakyReLU( self, negative_slope=0.3, **kwargs )
keras.layers.PReLU( self, alpha_initializer='Zeros', alpha_regularizer=None, alpha_constraint=None, shared_axes=None, **kwargs )
keras.layers.ReLU( self, max_value=None, negative_slope=0.0, threshold=0.0, **kwargs )
keras.layers.Softmax( self, axis=-1, **kwargs )
